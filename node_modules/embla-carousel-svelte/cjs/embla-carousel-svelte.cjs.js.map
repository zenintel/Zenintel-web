{"version":3,"file":"embla-carousel-svelte.cjs.js","sources":["../src/components/emblaCarouselSvelte.ts"],"sourcesContent":["import { ActionReturn } from 'svelte/action'\nimport {\n  areOptionsEqual,\n  arePluginsEqual,\n  canUseDOM\n} from 'embla-carousel-reactive-utils'\nimport EmblaCarousel, {\n  EmblaCarouselType,\n  EmblaOptionsType,\n  EmblaPluginType\n} from 'embla-carousel'\n\ntype EmblaCarouselParameterType = {\n  options: EmblaOptionsType\n  plugins: EmblaPluginType[]\n}\n\ntype EmblaCarouselAttributesType = {\n  'on:emblaInit'?: (evt: CustomEvent<EmblaCarouselType>) => void\n  onemblaInit?: (evt: CustomEvent<EmblaCarouselType>) => void\n}\n\nexport type EmblaCarouselSvelteType = ActionReturn<\n  EmblaCarouselParameterType,\n  EmblaCarouselAttributesType\n>\n\nfunction emblaCarouselSvelte(\n  emblaNode: HTMLElement,\n  emblaConfig: EmblaCarouselParameterType = { options: {}, plugins: [] }\n): EmblaCarouselSvelteType {\n  let storedEmblaConfig = emblaConfig\n  let emblaApi: EmblaCarouselType\n\n  if (canUseDOM()) {\n    EmblaCarousel.globalOptions = emblaCarouselSvelte.globalOptions\n    emblaApi = EmblaCarousel(\n      emblaNode,\n      storedEmblaConfig.options,\n      storedEmblaConfig.plugins\n    )\n    emblaApi.on('init', () =>\n      emblaNode.dispatchEvent(\n        new CustomEvent('emblaInit', { detail: emblaApi })\n      )\n    )\n  }\n\n  return {\n    destroy: () => {\n      if (emblaApi) emblaApi.destroy()\n    },\n    update: (newEmblaConfig) => {\n      const optionsChanged = !areOptionsEqual(\n        storedEmblaConfig.options,\n        newEmblaConfig.options\n      )\n      const pluginsChanged = !arePluginsEqual(\n        storedEmblaConfig.plugins,\n        newEmblaConfig.plugins\n      )\n\n      if (!optionsChanged && !pluginsChanged) return\n      storedEmblaConfig = newEmblaConfig\n\n      if (emblaApi) {\n        emblaApi.reInit(storedEmblaConfig.options, storedEmblaConfig.plugins)\n      }\n    }\n  }\n}\n\ndeclare namespace emblaCarouselSvelte {\n  let globalOptions: EmblaOptionsType | undefined\n}\n\nemblaCarouselSvelte.globalOptions = undefined\n\nexport default emblaCarouselSvelte\n"],"names":["emblaCarouselSvelte","emblaNode","emblaConfig","options","plugins","storedEmblaConfig","emblaApi","canUseDOM","EmblaCarousel","globalOptions","on","dispatchEvent","CustomEvent","detail","destroy","update","newEmblaConfig","optionsChanged","areOptionsEqual","pluginsChanged","arePluginsEqual","reInit","undefined"],"mappings":";;;;;AA2BA,SAASA,mBAAmBA,CAC1BC,SAAsB,EACtBC,WAA0C,GAAA;EAAEC,OAAO,EAAE,EAAE;AAAEC,EAAAA,OAAO,EAAE;AAAI,CAAA,EAAA;EAEtE,IAAIC,iBAAiB,GAAGH,WAAW;AACnC,EAAA,IAAII,QAA2B;EAE/B,IAAIC,oCAAS,EAAE,EAAE;AACfC,IAAAA,aAAa,CAACC,aAAa,GAAGT,mBAAmB,CAACS,aAAa;AAC/DH,IAAAA,QAAQ,GAAGE,aAAa,CACtBP,SAAS,EACTI,iBAAiB,CAACF,OAAO,EACzBE,iBAAiB,CAACD,OAAO,CAC1B;AACDE,IAAAA,QAAQ,CAACI,EAAE,CAAC,MAAM,EAAE,MAClBT,SAAS,CAACU,aAAa,CACrB,IAAIC,WAAW,CAAC,WAAW,EAAE;AAAEC,MAAAA,MAAM,EAAEP;KAAU,CAAC,CACnD,CACF;AACH;EAEA,OAAO;IACLQ,OAAO,EAAEA,MAAK;AACZ,MAAA,IAAIR,QAAQ,EAAEA,QAAQ,CAACQ,OAAO,EAAE;KACjC;IACDC,MAAM,EAAGC,cAAc,IAAI;AACzB,MAAA,MAAMC,cAAc,GAAG,CAACC,0CAAe,CACrCb,iBAAiB,CAACF,OAAO,EACzBa,cAAc,CAACb,OAAO,CACvB;AACD,MAAA,MAAMgB,cAAc,GAAG,CAACC,0CAAe,CACrCf,iBAAiB,CAACD,OAAO,EACzBY,cAAc,CAACZ,OAAO,CACvB;AAED,MAAA,IAAI,CAACa,cAAc,IAAI,CAACE,cAAc,EAAE;AACxCd,MAAAA,iBAAiB,GAAGW,cAAc;AAElC,MAAA,IAAIV,QAAQ,EAAE;QACZA,QAAQ,CAACe,MAAM,CAAChB,iBAAiB,CAACF,OAAO,EAAEE,iBAAiB,CAACD,OAAO,CAAC;AACvE;AACF;GACD;AACH;AAMAJ,mBAAmB,CAACS,aAAa,GAAGa,SAAS;;;;"}