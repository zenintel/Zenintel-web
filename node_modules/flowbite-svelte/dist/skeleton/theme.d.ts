import { type VariantProps } from "tailwind-variants";
type CardPlaceholderVariants = VariantProps<typeof cardPlaceholder>;
declare const cardPlaceholder: import("tailwind-variants").TVReturnType<{
    size: {
        sm: {
            base: string;
        };
        md: {
            base: string;
        };
        lg: {
            base: string;
        };
        xl: {
            base: string;
        };
        "2xl": {
            base: string;
        };
    };
}, {
    base: string;
    imageArea: string;
    imageIcon: string;
    line: string;
    footerArea: string;
}, undefined, {
    size: {
        sm: {
            base: string;
        };
        md: {
            base: string;
        };
        lg: {
            base: string;
        };
        xl: {
            base: string;
        };
        "2xl": {
            base: string;
        };
    };
}, {
    base: string;
    imageArea: string;
    imageIcon: string;
    line: string;
    footerArea: string;
}, import("tailwind-variants").TVReturnType<{
    size: {
        sm: {
            base: string;
        };
        md: {
            base: string;
        };
        lg: {
            base: string;
        };
        xl: {
            base: string;
        };
        "2xl": {
            base: string;
        };
    };
}, {
    base: string;
    imageArea: string;
    imageIcon: string;
    line: string;
    footerArea: string;
}, undefined, unknown, unknown, undefined>>;
type ImagePlaceholderVariants = VariantProps<typeof imagePlaceholder>;
declare const imagePlaceholder: import("tailwind-variants").TVReturnType<{
    size: {
        sm: {
            image: string;
            content: string;
        };
        md: {
            image: string;
            content: string;
        };
        lg: {
            image: string;
            content: string;
        };
    };
    rounded: {
        none: {
            image: string;
            line: string;
        };
        sm: {
            image: string;
            line: string;
        };
        md: {
            image: string;
            line: string;
        };
        lg: {
            image: string;
            line: string;
        };
        full: {
            image: string;
            line: string;
        };
    };
}, {
    base: string;
    image: string;
    svg: string;
    content: string;
    line: string;
}, undefined, {
    size: {
        sm: {
            image: string;
            content: string;
        };
        md: {
            image: string;
            content: string;
        };
        lg: {
            image: string;
            content: string;
        };
    };
    rounded: {
        none: {
            image: string;
            line: string;
        };
        sm: {
            image: string;
            line: string;
        };
        md: {
            image: string;
            line: string;
        };
        lg: {
            image: string;
            line: string;
        };
        full: {
            image: string;
            line: string;
        };
    };
}, {
    base: string;
    image: string;
    svg: string;
    content: string;
    line: string;
}, import("tailwind-variants").TVReturnType<{
    size: {
        sm: {
            image: string;
            content: string;
        };
        md: {
            image: string;
            content: string;
        };
        lg: {
            image: string;
            content: string;
        };
    };
    rounded: {
        none: {
            image: string;
            line: string;
        };
        sm: {
            image: string;
            line: string;
        };
        md: {
            image: string;
            line: string;
        };
        lg: {
            image: string;
            line: string;
        };
        full: {
            image: string;
            line: string;
        };
    };
}, {
    base: string;
    image: string;
    svg: string;
    content: string;
    line: string;
}, undefined, unknown, unknown, undefined>>;
type ListPlaceholderVariants = VariantProps<typeof listPlaceholder>;
declare const listPlaceholder: import("tailwind-variants").TVReturnType<{
    size: {
        sm: {
            base: string;
            itemTitle: string;
            itemSubtitle: string;
            itemExtra: string;
        };
        md: {};
        lg: {
            base: string;
            itemTitle: string;
            itemSubtitle: string;
            itemExtra: string;
        };
    };
    rounded: {
        none: {
            base: string;
        };
        sm: {
            base: string;
        };
        md: {
            base: string;
        };
        lg: {
            base: string;
        };
        full: {
            base: string;
        };
    };
}, {
    base: string;
    item: string;
    itemContent: string;
    itemTitle: string;
    itemSubtitle: string;
    itemExtra: string;
}, undefined, {
    size: {
        sm: {
            base: string;
            itemTitle: string;
            itemSubtitle: string;
            itemExtra: string;
        };
        md: {};
        lg: {
            base: string;
            itemTitle: string;
            itemSubtitle: string;
            itemExtra: string;
        };
    };
    rounded: {
        none: {
            base: string;
        };
        sm: {
            base: string;
        };
        md: {
            base: string;
        };
        lg: {
            base: string;
        };
        full: {
            base: string;
        };
    };
}, {
    base: string;
    item: string;
    itemContent: string;
    itemTitle: string;
    itemSubtitle: string;
    itemExtra: string;
}, import("tailwind-variants").TVReturnType<{
    size: {
        sm: {
            base: string;
            itemTitle: string;
            itemSubtitle: string;
            itemExtra: string;
        };
        md: {};
        lg: {
            base: string;
            itemTitle: string;
            itemSubtitle: string;
            itemExtra: string;
        };
    };
    rounded: {
        none: {
            base: string;
        };
        sm: {
            base: string;
        };
        md: {
            base: string;
        };
        lg: {
            base: string;
        };
        full: {
            base: string;
        };
    };
}, {
    base: string;
    item: string;
    itemContent: string;
    itemTitle: string;
    itemSubtitle: string;
    itemExtra: string;
}, undefined, unknown, unknown, undefined>>;
type SkeletonVariants = VariantProps<typeof skeleton>;
declare const skeleton: import("tailwind-variants").TVReturnType<{
    size: {
        sm: {
            wrapper: string;
        };
        md: {
            wrapper: string;
        };
        lg: {
            wrapper: string;
        };
        xl: {
            wrapper: string;
        };
        "2xl": {
            wrapper: string;
        };
    };
}, {
    wrapper: string;
    line: string;
}, undefined, {
    size: {
        sm: {
            wrapper: string;
        };
        md: {
            wrapper: string;
        };
        lg: {
            wrapper: string;
        };
        xl: {
            wrapper: string;
        };
        "2xl": {
            wrapper: string;
        };
    };
}, {
    wrapper: string;
    line: string;
}, import("tailwind-variants").TVReturnType<{
    size: {
        sm: {
            wrapper: string;
        };
        md: {
            wrapper: string;
        };
        lg: {
            wrapper: string;
        };
        xl: {
            wrapper: string;
        };
        "2xl": {
            wrapper: string;
        };
    };
}, {
    wrapper: string;
    line: string;
}, undefined, unknown, unknown, undefined>>;
declare const testimonialPlaceholder: import("tailwind-variants").TVReturnType<{
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            svg?: import("tailwind-variants").ClassValue;
            wrapper?: import("tailwind-variants").ClassValue;
            line1?: import("tailwind-variants").ClassValue;
            line2?: import("tailwind-variants").ClassValue;
            subContent?: import("tailwind-variants").ClassValue;
        };
    };
} | {
    [x: string]: {
        [x: string]: import("tailwind-variants").ClassValue | {
            svg?: import("tailwind-variants").ClassValue;
            wrapper?: import("tailwind-variants").ClassValue;
            line1?: import("tailwind-variants").ClassValue;
            line2?: import("tailwind-variants").ClassValue;
            subContent?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    wrapper: string;
    line1: string;
    line2: string;
    svg: string;
    subContent: string;
}, undefined, {
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            svg?: import("tailwind-variants").ClassValue;
            wrapper?: import("tailwind-variants").ClassValue;
            line1?: import("tailwind-variants").ClassValue;
            line2?: import("tailwind-variants").ClassValue;
            subContent?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    wrapper: string;
    line1: string;
    line2: string;
    svg: string;
    subContent: string;
}, import("tailwind-variants").TVReturnType<unknown, {
    wrapper: string;
    line1: string;
    line2: string;
    svg: string;
    subContent: string;
}, undefined, unknown, unknown, undefined>>;
type TextPlaceholderVariants = VariantProps<typeof textPlaceholder>;
declare const textPlaceholder: import("tailwind-variants").TVReturnType<{
    size: {
        sm: {
            baseWrapper: string;
        };
        md: {
            baseWrapper: string;
        };
        lg: {
            baseWrapper: string;
        };
        xl: {
            baseWrapper: string;
        };
        "2xl": {
            baseWrapper: string;
        };
    };
}, {
    baseWrapper: string;
    divWrapper: string;
    lineA: string;
    lineB: string;
}, undefined, {
    size: {
        sm: {
            baseWrapper: string;
        };
        md: {
            baseWrapper: string;
        };
        lg: {
            baseWrapper: string;
        };
        xl: {
            baseWrapper: string;
        };
        "2xl": {
            baseWrapper: string;
        };
    };
}, {
    baseWrapper: string;
    divWrapper: string;
    lineA: string;
    lineB: string;
}, import("tailwind-variants").TVReturnType<{
    size: {
        sm: {
            baseWrapper: string;
        };
        md: {
            baseWrapper: string;
        };
        lg: {
            baseWrapper: string;
        };
        xl: {
            baseWrapper: string;
        };
        "2xl": {
            baseWrapper: string;
        };
    };
}, {
    baseWrapper: string;
    divWrapper: string;
    lineA: string;
    lineB: string;
}, undefined, unknown, unknown, undefined>>;
type VideoPlaceholderVariants = VariantProps<typeof videoPlaceholder>;
declare const videoPlaceholder: import("tailwind-variants").TVReturnType<{
    size: {
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
    };
}, undefined, "flex justify-center items-center h-56 bg-gray-300 rounded-lg animate-pulse dark:bg-gray-700", {
    size: {
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    size: {
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
    };
}, undefined, "flex justify-center items-center h-56 bg-gray-300 rounded-lg animate-pulse dark:bg-gray-700", unknown, unknown, undefined>>;
declare const widgetPlaceholder: import("tailwind-variants").TVReturnType<{
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            wrapper?: import("tailwind-variants").ClassValue;
            hLine?: import("tailwind-variants").ClassValue;
            vLine?: import("tailwind-variants").ClassValue;
        };
    };
} | {
    [x: string]: {
        [x: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            wrapper?: import("tailwind-variants").ClassValue;
            hLine?: import("tailwind-variants").ClassValue;
            vLine?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    base: string;
    wrapper: string;
    hLine: string;
    vLine: string;
}, undefined, {
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            wrapper?: import("tailwind-variants").ClassValue;
            hLine?: import("tailwind-variants").ClassValue;
            vLine?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    base: string;
    wrapper: string;
    hLine: string;
    vLine: string;
}, import("tailwind-variants").TVReturnType<unknown, {
    base: string;
    wrapper: string;
    hLine: string;
    vLine: string;
}, undefined, unknown, unknown, undefined>>;
export { cardPlaceholder, type CardPlaceholderVariants, imagePlaceholder, type ImagePlaceholderVariants, listPlaceholder, type ListPlaceholderVariants, skeleton, type SkeletonVariants, testimonialPlaceholder, textPlaceholder, type TextPlaceholderVariants, videoPlaceholder, type VideoPlaceholderVariants, widgetPlaceholder };
