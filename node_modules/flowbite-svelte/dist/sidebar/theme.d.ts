import { type VariantProps } from "tailwind-variants";
export type SidebarVariants = VariantProps<typeof sidebar>;
export declare const sidebar: import("tailwind-variants").TVReturnType<{
    position: {
        fixed: {
            base: string;
        };
        absolute: {
            base: string;
        };
        static: {
            base: string;
        };
    };
    isOpen: {
        true: string;
        false: string;
    };
    breakpoint: {
        sm: {
            base: string;
        };
        md: {
            base: string;
        };
        lg: {
            base: string;
        };
        xl: {
            base: string;
        };
        "2xl": {
            base: string;
        };
    };
    alwaysOpen: {
        true: {
            base: string;
        };
    };
    backdrop: {
        true: {
            backdrop: string;
        };
    };
}, {
    base: string;
    active: string;
    nonactive: string;
    div: string;
    backdrop: string;
}, undefined, {
    position: {
        fixed: {
            base: string;
        };
        absolute: {
            base: string;
        };
        static: {
            base: string;
        };
    };
    isOpen: {
        true: string;
        false: string;
    };
    breakpoint: {
        sm: {
            base: string;
        };
        md: {
            base: string;
        };
        lg: {
            base: string;
        };
        xl: {
            base: string;
        };
        "2xl": {
            base: string;
        };
    };
    alwaysOpen: {
        true: {
            base: string;
        };
    };
    backdrop: {
        true: {
            backdrop: string;
        };
    };
}, {
    base: string;
    active: string;
    nonactive: string;
    div: string;
    backdrop: string;
}, import("tailwind-variants").TVReturnType<{
    position: {
        fixed: {
            base: string;
        };
        absolute: {
            base: string;
        };
        static: {
            base: string;
        };
    };
    isOpen: {
        true: string;
        false: string;
    };
    breakpoint: {
        sm: {
            base: string;
        };
        md: {
            base: string;
        };
        lg: {
            base: string;
        };
        xl: {
            base: string;
        };
        "2xl": {
            base: string;
        };
    };
    alwaysOpen: {
        true: {
            base: string;
        };
    };
    backdrop: {
        true: {
            backdrop: string;
        };
    };
}, {
    base: string;
    active: string;
    nonactive: string;
    div: string;
    backdrop: string;
}, undefined, unknown, unknown, undefined>>;
export declare const sidebarbutton: import("tailwind-variants").TVReturnType<{
    breakpoint: {
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
    };
}, undefined, "inline-flex items-center p-0 mt-0 ms-3 text-sm text-gray-500 rounded-lg hover:bg-gray-100 focus:outline-hidden focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600", {
    breakpoint: {
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    breakpoint: {
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
    };
}, undefined, "inline-flex items-center p-0 mt-0 ms-3 text-sm text-gray-500 rounded-lg hover:bg-gray-100 focus:outline-hidden focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600", unknown, unknown, undefined>>;
export declare const sidebarcta: import("tailwind-variants").TVReturnType<{
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
            div?: import("tailwind-variants").ClassValue;
        };
    };
} | {
    [x: string]: {
        [x: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
            div?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    base: string;
    div: string;
    span: string;
}, undefined, {
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
            div?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    base: string;
    div: string;
    span: string;
}, import("tailwind-variants").TVReturnType<unknown, {
    base: string;
    div: string;
    span: string;
}, undefined, unknown, unknown, undefined>>;
export declare const sitebarbrand: import("tailwind-variants").TVReturnType<{
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
            img?: import("tailwind-variants").ClassValue;
        };
    };
} | {
    [x: string]: {
        [x: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
            img?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    base: string;
    img: string;
    span: string;
}, undefined, {
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
            img?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    base: string;
    img: string;
    span: string;
}, import("tailwind-variants").TVReturnType<unknown, {
    base: string;
    img: string;
    span: string;
}, undefined, unknown, unknown, undefined>>;
export declare const sidebardropdownwrapper: import("tailwind-variants").TVReturnType<{
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
            svg?: import("tailwind-variants").ClassValue;
            ul?: import("tailwind-variants").ClassValue;
            btn?: import("tailwind-variants").ClassValue;
        };
    };
} | {
    [x: string]: {
        [x: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
            svg?: import("tailwind-variants").ClassValue;
            ul?: import("tailwind-variants").ClassValue;
            btn?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    base: string;
    btn: string;
    span: string;
    svg: string;
    ul: string;
}, undefined, {
    [key: string]: {
        [key: string]: import("tailwind-variants").ClassValue | {
            base?: import("tailwind-variants").ClassValue;
            span?: import("tailwind-variants").ClassValue;
            svg?: import("tailwind-variants").ClassValue;
            ul?: import("tailwind-variants").ClassValue;
            btn?: import("tailwind-variants").ClassValue;
        };
    };
} | {}, {
    base: string;
    btn: string;
    span: string;
    svg: string;
    ul: string;
}, import("tailwind-variants").TVReturnType<unknown, {
    base: string;
    btn: string;
    span: string;
    svg: string;
    ul: string;
}, undefined, unknown, unknown, undefined>>;
