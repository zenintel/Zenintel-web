import type { ClassValue } from "svelte/elements";
export type StepperClasses = Partial<{
    stepper: ClassValue;
    stepperitem: ClassValue;
    steppercontent: ClassValue;
}>;
export type StepperVariants = {
    classes?: StepperClasses;
};
export declare const stepper: import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "flex items-center w-full text-sm font-medium text-center text-gray-500 dark:text-gray-400 sm:text-base", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "flex items-center w-full text-sm font-medium text-center text-gray-500 dark:text-gray-400 sm:text-base", unknown, unknown, undefined>>;
export declare const stepperitem: import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
    isLast: {
        true: string;
        false: string;
    };
}, undefined, "flex items-center", {
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
    isLast: {
        true: string;
        false: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
    isLast: {
        true: string;
        false: string;
    };
}, undefined, "flex items-center", unknown, unknown, undefined>>;
export declare const steppercontent: import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
    isLast: {
        true: string;
        false: string;
    };
}, undefined, "flex items-center", {
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
    isLast: {
        true: string;
        false: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
    isLast: {
        true: string;
        false: string;
    };
}, undefined, "flex items-center", unknown, unknown, undefined>>;
export type ProgressStepperClasses = Partial<{
    progressstepper: ClassValue;
    progressstepperitem: ClassValue;
    progresssteppercircle: ClassValue;
}>;
export type ProgressStepperVariants = {
    classes?: ProgressStepperClasses;
};
export declare const progressstepper: import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "flex items-center w-full", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "flex items-center w-full", unknown, unknown, undefined>>;
export declare const progressstepperitem: import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
    isLast: {
        true: string;
        false: string;
    };
}, undefined, "flex items-center w-full", {
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
    isLast: {
        true: string;
        false: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
    isLast: {
        true: string;
        false: string;
    };
}, undefined, "flex items-center w-full", unknown, unknown, undefined>>;
export declare const progresssteppercircle: import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, string[], {
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, string[], unknown, unknown, undefined>>;
export type DetailedStepperClasses = Partial<{
    detailedstepper: ClassValue;
    detailedstepperitem: ClassValue;
    detailedstepperindicator: ClassValue;
}>;
export type DetailedStepperVariants = {
    classes?: DetailedStepperClasses;
};
export declare const detailedstepper: import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "items-center w-full space-y-4 sm:flex sm:space-x-8 sm:space-y-0 rtl:space-x-reverse", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "items-center w-full space-y-4 sm:flex sm:space-x-8 sm:space-y-0 rtl:space-x-reverse", unknown, unknown, undefined>>;
export declare const detailedstepperitem: import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, string[], {
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, string[], unknown, unknown, undefined>>;
export declare const detailedstepperindicator: import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, string[], {
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, string[], unknown, unknown, undefined>>;
export type VerticalStepperClasses = Partial<{
    verticalstepper: ClassValue;
    verticalsteppercard: ClassValue;
    verticalsteppercontent: ClassValue;
}>;
export type VerticalStepperVariants = {
    classes?: VerticalStepperClasses;
};
export declare const verticalstepper: import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "space-y-4 w-72", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "space-y-4 w-72", unknown, unknown, undefined>>;
export declare const verticalsteppercard: import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, string[], {
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, string[], unknown, unknown, undefined>>;
export declare const verticalsteppercontent: import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "flex items-center justify-between", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "flex items-center justify-between", unknown, unknown, undefined>>;
export type BreadcrumbStepperClasses = Partial<{
    breadcrumbstepper: ClassValue;
    breadcrumbstepperitem: ClassValue;
    breadcrumbstepperindicator: ClassValue;
}>;
export type BreadcrumbStepperVariants = {
    classes?: BreadcrumbStepperClasses;
};
export declare const breadcrumbstepper: import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, string[], {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, string[], unknown, unknown, undefined>>;
export declare const breadcrumbstepperitem: import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
    hasChevron: {
        true: never[];
        false: never[];
    };
}, undefined, string[], {
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
    hasChevron: {
        true: never[];
        false: never[];
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
    hasChevron: {
        true: never[];
        false: never[];
    };
}, undefined, string[], unknown, unknown, undefined>>;
export declare const breadcrumbstepperindicator: import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, string[], {
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, string[], unknown, unknown, undefined>>;
export type TimelineStepperClasses = Partial<{
    timelinestepper: ClassValue;
    timelinestepperitem: ClassValue;
    timelinesteppercircle: ClassValue;
}>;
export type TimelineStepperVariants = {
    classes?: TimelineStepperClasses;
};
export declare const timelinestepper: import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "relative text-gray-500 border-s border-gray-200 dark:border-gray-700 dark:text-gray-400", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "relative text-gray-500 border-s border-gray-200 dark:border-gray-700 dark:text-gray-400", unknown, unknown, undefined>>;
export declare const timelinestepperitem: import("tailwind-variants").TVReturnType<{
    isLast: {
        true: string;
        false: string;
    };
}, undefined, "ms-6", {
    isLast: {
        true: string;
        false: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    isLast: {
        true: string;
        false: string;
    };
}, undefined, "ms-6", unknown, unknown, undefined>>;
export declare const timelinesteppercircle: import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, string[], {
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    status: {
        completed: string[];
        current: string[];
        pending: string[];
    };
}, undefined, string[], unknown, unknown, undefined>>;
