import { type VariantProps } from "tailwind-variants";
export type CarouselVariants = VariantProps<typeof carousel>;
export declare const carousel: import("tailwind-variants").TVReturnType<{}, undefined, "grid overflow-hidden relative rounded-lg h-56 sm:h-64 xl:h-80 2xl:h-96", {}, undefined, import("tailwind-variants").TVReturnType<{}, undefined, "grid overflow-hidden relative rounded-lg h-56 sm:h-64 xl:h-80 2xl:h-96", unknown, unknown, undefined>>;
export declare const indicators: import("tailwind-variants").TVReturnType<{
    selected: {
        true: {
            indicator: string;
        };
        false: {
            indicator: string;
        };
    };
    position: {
        top: {
            base: string;
        };
        bottom: {
            base: string;
        };
        withThumbnails: {
            base: string;
        };
    };
}, {
    base: string;
    indicator: string;
}, undefined, {
    selected: {
        true: {
            indicator: string;
        };
        false: {
            indicator: string;
        };
    };
    position: {
        top: {
            base: string;
        };
        bottom: {
            base: string;
        };
        withThumbnails: {
            base: string;
        };
    };
}, {
    base: string;
    indicator: string;
}, import("tailwind-variants").TVReturnType<{
    selected: {
        true: {
            indicator: string;
        };
        false: {
            indicator: string;
        };
    };
    position: {
        top: {
            base: string;
        };
        bottom: {
            base: string;
        };
        withThumbnails: {
            base: string;
        };
    };
}, {
    base: string;
    indicator: string;
}, undefined, unknown, unknown, undefined>>;
export declare const controlButton: import("tailwind-variants").TVReturnType<{
    forward: {
        true: string;
        false: string;
    };
}, undefined, "flex absolute top-0 z-30 justify-center items-center px-4 h-full group focus:outline-hidden text-white dark:text-gray-300", {
    forward: {
        true: string;
        false: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    forward: {
        true: string;
        false: string;
    };
}, undefined, "flex absolute top-0 z-30 justify-center items-center px-4 h-full group focus:outline-hidden text-white dark:text-gray-300", unknown, unknown, undefined>>;
export declare const thumbnails: import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "flex flex-row justify-center bg-gray-100 w-full", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "flex flex-row justify-center bg-gray-100 w-full", unknown, unknown, undefined>>;
export declare const thumbnail: import("tailwind-variants").TVReturnType<{
    selected: {
        true: string;
        false: string;
    };
}, undefined, "", {
    selected: {
        true: string;
        false: string;
    };
}, undefined, import("tailwind-variants").TVReturnType<{
    selected: {
        true: string;
        false: string;
    };
}, undefined, "", unknown, unknown, undefined>>;
export declare const slide: import("tailwind-variants").TVReturnType<{} | {} | {}, undefined, "absolute block w-full! h-full object-cover", {} | {}, undefined, import("tailwind-variants").TVReturnType<unknown, undefined, "absolute block w-full! h-full object-cover", unknown, unknown, undefined>>;
